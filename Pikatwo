#include <SharpIR.h>
#include <Stepper.h>

#define IRPin A0
#define model 1080

 #define stepPin 8 
 #define dirPin  9
 #define outputA 10
 #define outputB 11
 int counter = 0;
 int angle = 0; 
 int aState;
 int aLastState; 
 
 int distance_cm;
 
 const int stepsPerRevolution = 2048;
 
 Stepper myStepper_right = Stepper(stepsPerRevolution, 8, 10, 9, 11);
 Stepper myStepper2_left = Stepper(stepsPerRevolution, blah, blah, blah, blah); 
 SharpIR mySensor = SharpIR(IRPin, model);
SharpIR mySensor2 = SharpIR(IRPin, model);
SharpIR mySensor3 = SharpIR(IRPin, model);

void setup() {
  // Begin serial communication at a baudrate of 9600:
  Serial.begin(9600);
  
   // Sets the two pins as Outputs
  pinMode(stepPin,OUTPUT); 
  pinMode(dirPin,OUTPUT);
  pinMode (outputA,INPUT);
  pinMode (outputB,INPUT);
  
  aLastState = digitalRead(outputA);
  
  // Set the speed to 5 rpm:
  myStepper.setSpeed(5);
}

void loop() {
  // Get a distance measurement and store it as distance_cm:
  distance_cm = mySensor.distance();
  if (distance_cm <= 10) {
    Serial.println("Mewtwo Too Close to Wall!");
    
  }
  // Print the measured distance to the serial monitor:
  Serial.print("Mean distance: ");
  Serial.print(distance_cm);
  Serial.println(" cm");
  delay(1000);
  
  aState = digitalRead(outputA);
  
  if (aState != aLastState){     
     if (digitalRead(outputB) != aState) { 
       counter ++;
       angle ++;
       rotateCW();  
     }
     else {
       counter--;
       angle --;
       rotateCCW(); 
     }
     if (counter >=30 ) {
      counter =0;
     }
     
     
     Serial.print("Position: ");
     Serial.print(int(angle*(-1.8)));
     Serial.print("deg"); 
     
     
   }
  aLastState = aState;
  
  // Step one revolution in one direction:
  Serial.println("clockwise");
  myStepper.step(stepsPerRevolution);
  delay(500);
  
  // Step one revolution in the other direction:
  Serial.println("counterclockwise");
  myStepper.step(-stepsPerRevolution);
  delay(500);
  
 
 }
 
 void rotateCW() {
  digitalWrite(dirPin,LOW);
    digitalWrite(stepPin,HIGH);
    delayMicroseconds(2000);
    digitalWrite(stepPin,LOW);
    delayMicroseconds(2000); 
}
void rotateCCW() {
  digitalWrite(dirPin,HIGH);
    digitalWrite(stepPin,HIGH);
    delayMicroseconds(2000);
    digitalWrite(stepPin,LOW);
    delayMicroseconds(2000);   
}

void left() {


